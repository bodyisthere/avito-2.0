//–∏–º–ø–æ—Ä—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø–∞–∫–µ—Ç–æ–≤
import React, { FC } from "react";

//–∏–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import styles from "../MapCustom.module.scss";

//–∏–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { ILocation } from "../../../types/ILocation";

//–∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

//–∏–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

interface IMapDropDown {
  data: ILocation[]
  setData: React.Dispatch<React.SetStateAction<ILocation[]>> 
  setValue: React.Dispatch<React.SetStateAction<string>>
  mapConfigure: any
  width?: number | string
}

export const MapDropDown: FC<IMapDropDown> = ( { data, setValue, setData, mapConfigure, width }) => {

  const onClick = (el: ILocation) => {
    setValue(el.textLine);
    setData([]);
    mapConfigure(el);
  };

  return (
    <ul 
      className={styles.dropdown} 
      style={
        {
          "width": `${width ? width : "99%"}`,
        }
      }
    >
      {
        data.length
          ?
          data.map((el, index) => {
            return <li onClick={() => onClick(el)} key={index}>{el.textLine}</li>;
          })
          :
          <p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ...üòû</p>
      }
    </ul>
  );
};